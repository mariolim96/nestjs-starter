name: 📊 Repository Stats

on:
  schedule:
    # Run every week on Monday at 6 AM UTC
    - cron: '0 6 * * 1'
  workflow_dispatch:

permissions:
  contents: read

jobs:
  generate-stats:
    name: 📊 Generate Repository Statistics
    runs-on: ubuntu-latest
    
    steps:
      - name: 📦 Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: 📊 Generate repository statistics
        uses: actions/github-script@v7
        with:
          script: |
            const owner = context.repo.owner;
            const repo = context.repo.repo;
            
            // Get repository data
            const repoData = await github.rest.repos.get({ owner, repo });
            
            // Get contributors
            const contributors = await github.rest.repos.listContributors({ 
              owner, 
              repo,
              per_page: 100 
            });
            
            // Get languages
            const languages = await github.rest.repos.listLanguages({ owner, repo });
            
            // Get recent activity (last 30 days)
            const thirtyDaysAgo = new Date(Date.now() - 30 * 24 * 60 * 60 * 1000);
            const commits = await github.rest.repos.listCommits({
              owner,
              repo,
              since: thirtyDaysAgo.toISOString(),
              per_page: 100
            });
            
            // Get issues and PRs
            const issues = await github.rest.issues.listForRepo({
              owner,
              repo,
              state: 'all',
              per_page: 100
            });
            
            const openIssues = issues.data.filter(issue => 
              issue.state === 'open' && !issue.pull_request
            );
            
            const openPRs = issues.data.filter(issue => 
              issue.state === 'open' && issue.pull_request
            );
            
            // Get releases
            const releases = await github.rest.repos.listReleases({
              owner,
              repo,
              per_page: 10
            });
            
            const stats = {
              repository: {
                name: repoData.data.name,
                fullName: repoData.data.full_name,
                description: repoData.data.description,
                stars: repoData.data.stargazers_count,
                forks: repoData.data.forks_count,
                watchers: repoData.data.watchers_count,
                size: repoData.data.size,
                openIssues: repoData.data.open_issues_count,
                defaultBranch: repoData.data.default_branch,
                createdAt: repoData.data.created_at,
                updatedAt: repoData.data.updated_at
              },
              activity: {
                contributors: contributors.data.length,
                recentCommits: commits.data.length,
                openIssuesCount: openIssues.length,
                openPRsCount: openPRs.length,
                totalReleases: releases.data.length,
                latestRelease: releases.data[0]?.tag_name || 'None'
              },
              languages: Object.keys(languages.data),
              topLanguage: Object.keys(languages.data)[0] || 'Unknown',
              generatedAt: new Date().toISOString()
            };
            
            console.log('📊 Repository Statistics Generated:');
            console.log(JSON.stringify(stats, null, 2));
            
            // Create summary
            const summary = `## 📊 Weekly Repository Statistics
            
            ### 📈 Overview
            - **Stars:** ${stats.repository.stars}
            - **Forks:** ${stats.repository.forks}
            - **Watchers:** ${stats.repository.watchers}
            - **Size:** ${Math.round(stats.repository.size / 1024 * 100) / 100} MB
            
            ### 👥 Community
            - **Contributors:** ${stats.activity.contributors}
            - **Open Issues:** ${stats.activity.openIssuesCount}
            - **Open PRs:** ${stats.activity.openPRsCount}
            
            ### 🚀 Recent Activity (Last 30 Days)
            - **Commits:** ${stats.activity.recentCommits}
            - **Latest Release:** ${stats.activity.latestRelease}
            
            ### 💻 Languages
            - **Primary:** ${stats.topLanguage}
            - **All:** ${stats.languages.join(', ')}
            
            ---
            *Generated on ${new Date().toLocaleDateString()}*
            `;
            
            console.log('\n' + summary);
            
            return stats;

      - name: 📁 Upload stats artifact
        run: |
          # Create a simple stats file
          echo "Repository Statistics - $(date)" > repository-stats.txt
          echo "=================================" >> repository-stats.txt
          echo "Generated: $(date)" >> repository-stats.txt
          echo "Repository: ${{ github.repository }}" >> repository-stats.txt

      - name: 📁 Upload artifact
        uses: actions/upload-artifact@v4
        with:
          name: repository-statistics
          path: repository-stats.txt
          retention-days: 30

      - name: 📊 Statistics summary
        run: |
          echo "## 📊 Repository Statistics Summary" >> $GITHUB_STEP_SUMMARY
          echo "**Generated:** $(date)" >> $GITHUB_STEP_SUMMARY
          echo "**Repository:** ${{ github.repository }}" >> $GITHUB_STEP_SUMMARY
          echo "**Status:** ✅ Statistics generated successfully" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "Check the workflow logs for detailed statistics." >> $GITHUB_STEP_SUMMARY