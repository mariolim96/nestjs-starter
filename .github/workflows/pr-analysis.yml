name: 📊 PR Analysis

on:
  pull_request:
    types: [opened, synchronize, reopened, ready_for_review]
    branches: [ main, master, develop ]

jobs:
  pr-analysis:
    name: 📊 Analyze Pull Request
    runs-on: ubuntu-latest
    if: github.event.pull_request.draft == false
    
    steps:
      - name: 📦 Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: 📊 PR Size Analysis
        id: pr-size
        run: |
          FILES_CHANGED=$(git diff --name-only origin/${{ github.base_ref }}...HEAD | wc -l)
          LINES_ADDED=$(git diff --numstat origin/${{ github.base_ref }}...HEAD | awk '{add+=$1} END {print add}')
          LINES_DELETED=$(git diff --numstat origin/${{ github.base_ref }}...HEAD | awk '{del+=$2} END {print del}')
          
          echo "files_changed=$FILES_CHANGED" >> $GITHUB_OUTPUT
          echo "lines_added=$LINES_ADDED" >> $GITHUB_OUTPUT
          echo "lines_deleted=$LINES_DELETED" >> $GITHUB_OUTPUT
          
          # Determine PR size
          if [ $FILES_CHANGED -gt 50 ] || [ $LINES_ADDED -gt 1000 ]; then
            echo "size=large" >> $GITHUB_OUTPUT
          elif [ $FILES_CHANGED -gt 20 ] || [ $LINES_ADDED -gt 500 ]; then
            echo "size=medium" >> $GITHUB_OUTPUT
          else
            echo "size=small" >> $GITHUB_OUTPUT
          fi

      - name: 📝 Add PR size label
        uses: actions/github-script@v7
        with:
          script: |
            const prSize = '${{ steps.pr-size.outputs.size }}';
            const labels = ['size/' + prSize];
            
            // Remove existing size labels
            const currentLabels = context.payload.pull_request.labels.map(label => label.name);
            const sizeLabels = currentLabels.filter(label => label.startsWith('size/'));
            
            for (const label of sizeLabels) {
              await github.rest.issues.removeLabel({
                owner: context.repo.owner,
                repo: context.repo.repo,
                issue_number: context.issue.number,
                name: label
              });
            }
            
            // Add new size label
            await github.rest.issues.addLabels({
              owner: context.repo.owner,
              repo: context.repo.repo,
              issue_number: context.issue.number,
              labels: labels
            });

      - name: 📊 Comment PR Statistics
        uses: actions/github-script@v7
        with:
          script: |
            const prSize = '${{ steps.pr-size.outputs.size }}';
            const filesChanged = '${{ steps.pr-size.outputs.files_changed }}';
            const linesAdded = '${{ steps.pr-size.outputs.lines_added }}';
            const linesDeleted = '${{ steps.pr-size.outputs.lines_deleted }}';
            
            const sizeEmojis = {
              small: '🟢',
              medium: '🟡', 
              large: '🔴'
            };
            
            const comment = `## 📊 PR Analysis
            
            ${sizeEmojis[prSize]} **Size: ${prSize.toUpperCase()}**
            
            | Metric | Value |
            |--------|-------|
            | Files changed | ${filesChanged} |
            | Lines added | ${linesAdded} |
            | Lines deleted | ${linesDeleted} |
            
            ${prSize === 'large' ? '⚠️ **Large PR detected!** Consider breaking this into smaller PRs for easier review.' : ''}
            `;
            
            await github.rest.issues.createComment({
              owner: context.repo.owner,
              repo: context.repo.repo,
              issue_number: context.issue.number,
              body: comment
            });